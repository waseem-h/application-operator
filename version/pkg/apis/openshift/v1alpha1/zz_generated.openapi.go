// +build !ignore_autogenerated

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/atgse/springboot-operator/pkg/apis/openshift/v1alpha1.SpringBootApplication":       schema_pkg_apis_openshift_v1alpha1_SpringBootApplication(ref),
		"github.com/atgse/springboot-operator/pkg/apis/openshift/v1alpha1.SpringBootApplicationSpec":   schema_pkg_apis_openshift_v1alpha1_SpringBootApplicationSpec(ref),
		"github.com/atgse/springboot-operator/pkg/apis/openshift/v1alpha1.SpringBootApplicationStatus": schema_pkg_apis_openshift_v1alpha1_SpringBootApplicationStatus(ref),
	}
}

func schema_pkg_apis_openshift_v1alpha1_SpringBootApplication(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "SpringBootApplication is the Schema for the springbootapplications API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/atgse/springboot-operator/pkg/apis/openshift/v1alpha1.SpringBootApplicationSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/atgse/springboot-operator/pkg/apis/openshift/v1alpha1.SpringBootApplicationStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/atgse/springboot-operator/pkg/apis/openshift/v1alpha1.SpringBootApplicationSpec", "github.com/atgse/springboot-operator/pkg/apis/openshift/v1alpha1.SpringBootApplicationStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_openshift_v1alpha1_SpringBootApplicationSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "SpringBootApplicationSpec defines the desired state of SpringBootApplication",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"replicas": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"imagePullPolicy": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"image": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"reloadOnChange": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
					"rollingParams": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/atgse/springboot-operator/pkg/apis/openshift/v1alpha1.RollingParams"),
						},
					},
					"service": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/atgse/springboot-operator/pkg/apis/openshift/v1alpha1.ServiceSpec"),
						},
					},
				},
				Required: []string{"image"},
			},
		},
		Dependencies: []string{
			"github.com/atgse/springboot-operator/pkg/apis/openshift/v1alpha1.RollingParams", "github.com/atgse/springboot-operator/pkg/apis/openshift/v1alpha1.ServiceSpec"},
	}
}

func schema_pkg_apis_openshift_v1alpha1_SpringBootApplicationStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "SpringBootApplicationStatus defines the observed state of SpringBootApplication",
				Type:        []string{"object"},
			},
		},
	}
}
